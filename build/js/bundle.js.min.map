{"version":3,"sources":["app.js"],"names":["page","appointment","name","date","hour","services","initApp","showServices","showSection","changeSection","nextPage","previousPage","pagerButtons","showResume","nextSection","document","querySelector","classList","remove","add","currentTab","querySelectorAll","forEach","link","addEventListener","e","preventDefault","parseInt","target","dataset","step","async","result","fetch","db","json","servicios","service","id","nombre","precio","nameService","createElement","textContent","priceService","divService","onclick","selectedService","idService","appendChild","error","console","log","event","element","tagName","parentElement","contains","deleteService","addService","firstElementChild","nextElementSibling","filter","serviceObj","divSummary","Object","values","includes","noServices"],"mappings":"AAAA,IAAAA,KAAA,EAEA,MAAAC,YAAA,CACAC,KAAA,GACAC,KAAA,GACAC,KAAA,GACAC,SAAA,IAOA,SAAAC,UAEAC,eAEAC,cAEAC,gBAEAC,WACAC,eAEAC,eAEAC,aAGA,SAAAL,cAEA,MAAAM,EAAAC,SAAAC,cAAA,iBACAF,GACAA,EAAAG,UAAAC,OAAA,gBAGAH,SAAAC,cAAA,SAAAhB,MACAiB,UAAAE,IAAA,gBAGA,MAAAC,EAAAL,SAAAC,cAAA,wBACAI,GACAA,EAAAH,UAAAC,OAAA,WAIAH,SAAAC,cAAA,eAAAhB,UACAiB,UAAAE,IAAA,WAGA,SAAAV,gBACAM,SAAAM,iBAAA,gBACAC,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,IACAA,EAAAC,iBACA1B,KAAA2B,SAAAF,EAAAG,OAAAC,QAAAC,MAGAtB,cAEAI,mBAKAmB,eAAAxB,eACA,IACA,MAAAyB,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QACAC,UAAAA,GAAAF,EACAE,EAAAd,QAAAe,IACA,MAAAC,GAAAA,EAAAC,OAAAA,EAAAC,OAAAA,GAAAH,EAIAI,EAAA1B,SAAA2B,cAAA,KACAD,EAAAE,YAAAJ,EACAE,EAAAxB,UAAAE,IAAA,gBAGA,MAAAyB,EAAA7B,SAAA2B,cAAA,KACAE,EAAAD,YAAA,KAAAH,EACAI,EAAA3B,UAAAE,IAAA,iBAGA,MAAA0B,EAAA9B,SAAA2B,cAAA,OACAG,EAAA5B,UAAAE,IAAA,WAGA0B,EAAAC,QAAAC,gBACAF,EAAAhB,QAAAmB,UAAAV,EAGAO,EAAAI,YAAAR,GACAI,EAAAI,YAAAL,GAGA7B,SAAAC,cAAA,aAAAiC,YAAAJ,KAEA,MAAAK,GACAC,QAAAC,IAAAF,IAIA,SAAAH,gBAAAM,GACA,IAAAC,EAQA,GALAA,EADA,MAAAD,EAAAzB,OAAA2B,QACAF,EAAAzB,OAAA4B,cAEAH,EAAAzB,OAGA0B,EAAArC,UAAAwC,SAAA,YAAA,CACAH,EAAArC,UAAAC,OAAA,YAIAwC,cAFA/B,SAAA2B,EAAAzB,QAAAmB,gBAGA,CACAM,EAAArC,UAAAE,IAAA,YAQAwC,WANA,CACArB,GAAAX,SAAA2B,EAAAzB,QAAAmB,WACAT,OAAAe,EAAAM,kBAAAjB,YACAH,OAAAc,EAAAM,kBAAAC,mBAAAlB,eAOA,SAAAe,cAAApB,GACA,MAAAjC,SAAAA,GAAAJ,YACAA,YAAAI,SAAAA,EAAAyD,OAAAzB,GAAAA,EAAAC,KAAAA,GAEAa,QAAAC,IAAAnD,aAGA,SAAA0D,WAAAI,GACA,MAAA1D,SAAAA,GAAAJ,YACAA,YAAAI,SAAA,IAAAA,EAAA0D,GACAZ,QAAAC,IAAAnD,aAGA,SAAAS,WACAK,SAAAC,cAAA,SACAQ,iBAAA,QAAA,KACAxB,OACAmD,QAAAC,IAAApD,MACAY,iBAIA,SAAAD,eACAI,SAAAC,cAAA,aACAQ,iBAAA,QAAA,KACAxB,OACAmD,QAAAC,IAAApD,MACAY,iBAIA,SAAAA,eACA,MAAAF,EAAAK,SAAAC,cAAA,SACAL,EAAAI,SAAAC,cAAA,aACA,IAAAhB,MACAW,EAAAM,UAAAE,IAAA,QACAT,EAAAO,UAAAC,OAAA,SACA,IAAAlB,MACAU,EAAAO,UAAAE,IAAA,QACAR,EAAAM,UAAAC,OAAA,UAEAP,EAAAM,UAAAC,OAAA,QACAR,EAAAO,UAAAC,OAAA,SAEAV,cAGA,SAAAK,aAEA,MAAAX,KAAAA,EAAAC,KAAAA,EAAAC,KAAAA,EAAAC,SAAAA,GAAAJ,YAGA+D,EAAAjD,SAAAC,cAAA,oBAGA,GAAAiD,OAAAC,OAAAjE,aAAAkE,SAAA,IAAA,CACA,MAAAC,EAAArD,SAAA2B,cAAA,KACA0B,EAAAzB,YAAA,kDACAyB,EAAAnD,UAAAE,IAAA,0BAGA6C,EAAAf,YAAAmB,IAxLArD,SAAAS,iBAAA,oBAAA,WACAlB","file":"bundle.js","sourcesContent":["let page = 1;\n\nconst appointment = {\n    name: '',\n    date: '',\n    hour: '',\n    services: []\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    initApp();\n})\n\nfunction initApp(){\n    // Query the services.json file through fetch and display it in the HTML\n    showServices();\n    // Highlight the current DIV according to the tab that is pressed\n    showSection();\n    // Hide or show a section according to the tab that is pressed\n    changeSection()\n    // Next and previous page\n    nextPage();\n    previousPage();\n    // Check current page to hide or show pagination\n    pagerButtons();\n    // It shows the summary of the appointment (or message in case of not passing the validation)\n    showResume();\n}\n\nfunction showSection() {\n    // Remove the show-section class from the previous section\n    const nextSection = document.querySelector('.show-section');\n    if(nextSection) {\n        nextSection.classList.remove('show-section');\n    }\n    \n    const currentSection = document.querySelector(`#step-${page}`);\n    currentSection.classList.add('show-section');\n\n    // Delete the Current class in the previous tab\n    const currentTab = document.querySelector('.tabs button.current');\n    if(currentTab) {\n        currentTab.classList.remove('current');\n    }\n    \n    // Highlight the current tab\n    const tab = document.querySelector(`[data-step=\"${page}\"]`);\n    tab.classList.add('current');\n}\n\nfunction changeSection() {\n    const links = document.querySelectorAll('.tabs button');\n    links.forEach( link => {\n        link.addEventListener('click', e => {\n            e.preventDefault();\n            page = parseInt(e.target.dataset.step);\n            \n            // Call showSection function\n            showSection();\n\n            pagerButtons();\n        })\n    })\n}\n\nasync function showServices(){\n    try {\n        const result = await fetch('./servicios.json');\n        const db = await result.json();\n        const {servicios} = db;\n        servicios.forEach( service => {\n            const {id, nombre, precio} = service;\n            // DOM Scripting\n\n            // Generate name service\n            const nameService = document.createElement('P');\n            nameService.textContent = nombre;\n            nameService.classList.add('name-service');\n\n            // Generate price service\n            const priceService = document.createElement('P');\n            priceService.textContent = `$ ${precio}`;\n            priceService.classList.add('price-service');\n\n            // Generate content div\n            const divService = document.createElement('DIV');\n            divService.classList.add('service');\n\n            //Select a service for the appointment\n            divService.onclick = selectedService;\n            divService.dataset.idService = id; \n\n            // Inject price and name to divService\n            divService.appendChild(nameService);\n            divService.appendChild(priceService);\n            \n            //Inject service to HTML\n            document.querySelector('#services').appendChild(divService);\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction selectedService(event) {\n    let element;\n    //Force the element we click to be the DIV\n    if(event.target.tagName === 'P'){ \n        element = event.target.parentElement;\n    } else {\n        element = event.target;\n    }\n\n    if(element.classList.contains('selected')){\n        element.classList.remove('selected');\n\n        const id = parseInt(element.dataset.idService);\n\n        deleteService(id);\n    } else {\n        element.classList.add('selected');\n\n        const serviceObj = {\n            id: parseInt(element.dataset.idService),\n            nombre: element.firstElementChild.textContent,\n            precio: element.firstElementChild.nextElementSibling.textContent\n        }\n    \n        addService(serviceObj);\n    }\n}\n\nfunction deleteService(id) {\n    const { services } = appointment;\n    appointment.services = services.filter(service => service.id !== id);\n\n    console.log(appointment);\n}\n\nfunction addService(serviceObj) {\n    const { services } = appointment;\n    appointment.services = [...services, serviceObj];\n    console.log(appointment);\n}\n\nfunction nextPage(){\n    const nextPage = document.querySelector('#next');\n    nextPage.addEventListener('click', () => {\n        page++;\n        console.log(page);\n        pagerButtons();\n    });\n}\n\nfunction previousPage(){\n    const previousPage = document.querySelector('#previous');\n    previousPage.addEventListener('click', () => {\n        page--;\n        console.log(page);\n        pagerButtons();\n    });\n}\n\nfunction pagerButtons() {\n    const nextPage = document.querySelector('#next');\n    const previousPage = document.querySelector('#previous');\n    if(page === 1) {\n        previousPage.classList.add('hide');\n        nextPage.classList.remove('hide');\n    } else if(page === 3) {\n        nextPage.classList.add('hide');\n        previousPage.classList.remove('hide');\n    } else {\n        previousPage.classList.remove('hide');\n        nextPage.classList.remove('hide');\n    }\n    showSection();\n}\n\nfunction showResume() {\n    // Destructuring\n    const { name, date, hour, services } = appointment;\n\n    // Selected summary\n    const divSummary =document.querySelector('.content-summary');\n\n    // Validate object\n    if(Object.values(appointment).includes('')){\n        const noServices = document.createElement('P');\n        noServices.textContent = 'Faltan datos de servicios, hora, fecha o nombre';\n        noServices.classList.add('invalidate-appointment');\n\n        // Add to divSummary\n        divSummary.appendChild(noServices);\n    }\n}"]}