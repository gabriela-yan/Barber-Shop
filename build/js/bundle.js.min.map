{"version":3,"sources":["app.js"],"names":["page","appointment","name","date","hour","services","initApp","showServices","showSection","changeSection","nextPage","previousPage","pagerButtons","showResume","nameAppointment","dateAppointment","disableDatePast","hourAppointment","nextSection","document","querySelector","classList","remove","add","currentTab","querySelectorAll","forEach","link","addEventListener","e","preventDefault","parseInt","target","dataset","step","async","result","fetch","db","json","servicios","service","id","nombre","precio","nameService","createElement","textContent","priceService","divService","onclick","selectedService","idService","appendChild","error","console","log","event","element","tagName","parentElement","contains","deleteService","addService","firstElementChild","nextElementSibling","filter","serviceObj","divSummary","firstChild","removeChild","Object","values","includes","noServices","headingAppointment","innerHTML","servicesAppointment","headingServices","quantity","serviceContainer","serviceTxt","servicePrice","serviceTotal","split","trim","amountToPay","nameTxt","value","length","showAlert","alert","message","type","setTimeout","dateInput","day","Date","getUTCDay","dateNow","year","getFullYear","month","getMonth","getDate","disableDate","min","hourInput"],"mappings":"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","file":"bundle.js","sourcesContent":["let page = 1;\n\nconst appointment = {\n    name: '',\n    date: '',\n    hour: '',\n    services: []\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    initApp();\n})\n\nfunction initApp(){\n    // Query the services.json file through fetch and display it in the HTML\n    showServices();\n    // Highlight the current DIV according to the tab that is pressed\n    showSection();\n    // Hide or show a section according to the tab that is pressed\n    changeSection()\n    // Next and previous page\n    nextPage();\n    previousPage();\n    // Check current page to hide or show pagination\n    pagerButtons();\n    // It shows the summary of the appointment (or message in case of not passing the validation)\n    showResume();\n    // Stores the name of the appointment in the object\n    nameAppointment();\n    // Stores the date of the appointment in the object\n    dateAppointment();\n    // Disable days past\n    disableDatePast();\n    // Stores the appointment time in the object\n    hourAppointment();\n}\n\nfunction showSection() {\n    // Remove the show-section class from the previous section\n    const nextSection = document.querySelector('.show-section');\n    if(nextSection) {\n        nextSection.classList.remove('show-section');\n    }\n    \n    const currentSection = document.querySelector(`#step-${page}`);\n    currentSection.classList.add('show-section');\n\n    // Delete the Current class in the previous tab\n    const currentTab = document.querySelector('.tabs button.current');\n    if(currentTab) {\n        currentTab.classList.remove('current');\n    }\n    \n    // Highlight the current tab\n    const tab = document.querySelector(`[data-step=\"${page}\"]`);\n    tab.classList.add('current');\n}\n\nfunction changeSection() {\n    const links = document.querySelectorAll('.tabs button');\n    links.forEach( link => {\n        link.addEventListener('click', e => {\n            e.preventDefault();\n            page = parseInt(e.target.dataset.step);\n            \n            // Call showSection function\n            showSection();\n\n            pagerButtons();\n        })\n    })\n}\n\nasync function showServices(){\n    try {\n        const result = await fetch('./servicios.json');\n        const db = await result.json();\n        const {servicios} = db;\n        servicios.forEach( service => {\n            const {id, nombre, precio} = service;\n            // DOM Scripting\n\n            // Generate name service\n            const nameService = document.createElement('P');\n            nameService.textContent = nombre;\n            nameService.classList.add('name-service');\n\n            // Generate price service\n            const priceService = document.createElement('P');\n            priceService.textContent = `$ ${precio}`;\n            priceService.classList.add('price-service');\n\n            // Generate content div\n            const divService = document.createElement('DIV');\n            divService.classList.add('service');\n\n            //Select a service for the appointment\n            divService.onclick = selectedService;\n            divService.dataset.idService = id; \n\n            // Inject price and name to divService\n            divService.appendChild(nameService);\n            divService.appendChild(priceService);\n            \n            //Inject service to HTML\n            document.querySelector('#services').appendChild(divService);\n        })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction selectedService(event) {\n    let element;\n    //Force the element we click to be the DIV\n    if(event.target.tagName === 'P'){ \n        element = event.target.parentElement;\n    } else {\n        element = event.target;\n    }\n\n    if(element.classList.contains('selected')){\n        element.classList.remove('selected');\n\n        const id = parseInt(element.dataset.idService);\n\n        deleteService(id);\n    } else {\n        element.classList.add('selected');\n\n        const serviceObj = {\n            id: parseInt(element.dataset.idService),\n            nombre: element.firstElementChild.textContent,\n            precio: element.firstElementChild.nextElementSibling.textContent\n        }\n    \n        addService(serviceObj);\n    }\n}\n\nfunction deleteService(id) {\n    const { services } = appointment;\n    appointment.services = services.filter(service => service.id !== id);\n\n    console.log(appointment);\n}\n\nfunction addService(serviceObj) {\n    const { services } = appointment;\n    appointment.services = [...services, serviceObj];\n    console.log(appointment);\n}\n\nfunction nextPage(){\n    const nextPage = document.querySelector('#next');\n    nextPage.addEventListener('click', () => {\n        page++;\n        pagerButtons();\n    });\n}\n\nfunction previousPage(){\n    const previousPage = document.querySelector('#previous');\n    previousPage.addEventListener('click', () => {\n        page--;\n        pagerButtons();\n    });\n}\n\nfunction pagerButtons() {\n    const nextPage = document.querySelector('#next');\n    const previousPage = document.querySelector('#previous');\n    if(page === 1) {\n        previousPage.classList.add('hide');\n        nextPage.classList.remove('hide');\n    } else if(page === 3) {\n        nextPage.classList.add('hide');\n        previousPage.classList.remove('hide');\n        showResume();\n    } else {\n        previousPage.classList.remove('hide');\n        nextPage.classList.remove('hide');\n    }\n    showSection();\n}\n\nfunction showResume() {\n    // Destructuring\n    const { name, date, hour, services } = appointment;\n\n    // Selected summary\n    const divSummary =document.querySelector('.content-summary');\n\n    //Clean previous HTML\n    // divSummary.innerHTML = '';\n    while(divSummary.firstChild) {\n        divSummary.removeChild(divSummary.firstChild);\n    }\n\n    // Validate object\n    if(Object.values(appointment).includes('')){\n        const noServices = document.createElement('P');\n        noServices.textContent = 'Faltan datos de servicios, hora, fecha o nombre';\n        noServices.classList.add('invalidate-appointment');\n\n        // Add to divSummary\n        divSummary.appendChild(noServices);\n        return;\n    } \n\n    const headingAppointment = document.createElement('H3');\n    headingAppointment.textContent = 'Resumen de cita';\n\n    // Show summary\n    const nameAppointment = document.createElement('P');\n    nameAppointment.innerHTML = `<span>Nombre:</span> ${name}`;\n\n    const dateAppointment = document.createElement('P');\n    dateAppointment.innerHTML = `<span>Fecha:</span> ${date}`;\n\n    const hourAppointment = document.createElement('P');\n    hourAppointment.innerHTML = `<span>Hora:</span> ${hour}`;\n\n    const servicesAppointment = document.createElement('DIV');\n    servicesAppointment.classList.add('summary-services');\n\n    const headingServices = document.createElement('H3');\n    headingServices.textContent = 'Resumen de servicios';\n    servicesAppointment.appendChild(headingServices);\n\n    let quantity = 0;\n\n    // Iterate over the service arrangement\n    services.forEach( service => {\n        const { nombre, precio } = service;\n        const serviceContainer = document.createElement('DIV');\n        serviceContainer.classList.add('container-service');\n\n        const serviceTxt = document.createElement('P');\n        serviceTxt.textContent = nombre;\n\n        const servicePrice = document.createElement('P');\n        servicePrice.textContent = precio;\n        servicePrice.classList.add('price');\n\n        const serviceTotal = precio.split('$'); \n        quantity += parseInt(serviceTotal[1].trim());\n\n        // Place price and text in the DIV\n        serviceContainer.appendChild(serviceTxt);\n        serviceContainer.appendChild(servicePrice);\n\n        servicesAppointment.appendChild(serviceContainer);\n    });\n\n    divSummary.appendChild(headingAppointment);\n    divSummary.appendChild(nameAppointment);\n    divSummary.appendChild(dateAppointment);\n    divSummary.appendChild(hourAppointment);\n\n    divSummary.appendChild(servicesAppointment);\n\n    const amountToPay = document.createElement('P');\n    amountToPay.classList.add('total');\n    amountToPay.innerHTML = `<span>Total a pagar: </span>$ ${quantity}`;\n\n    divSummary.appendChild(amountToPay);\n}\n\nfunction nameAppointment() {\n    const nameInput = document.querySelector('#name');\n\n    nameInput.addEventListener('input', event => {\n        const nameTxt = event.target.value.trim();\n        // Validation\n        if(nameTxt === '' || nameTxt.length < 3) {\n            showAlert('Nombre no válido', 'error');\n        } else {\n            const alert = document.querySelector('.alert');\n            if(alert) {\n                alert.remove();\n            }\n            appointment.name = nameTxt;\n        }\n    })\n}\n\nfunction showAlert(message, type) {\n    // If there is a previous alert, then do not create another\n    const previousAlert = document.querySelector('.alert');\n    if(previousAlert) {\n        return;\n    }\n\n    const alert = document.createElement('DIV');\n    alert.textContent = message;\n    alert.classList.add('alert');\n    if(type === 'error') {\n        alert.classList.add('error');\n    }\n\n    // Insert HTML\n    const form = document.querySelector('.form');\n    form.appendChild(alert);\n\n    // Delete alert after 3 seconds\n    setTimeout(() => {\n        alert.remove();\n    },3000)\n}\n\nfunction dateAppointment() {\n    const dateInput = document.querySelector('#date');\n    dateInput.addEventListener('input', event => {\n        \n        const day = new Date(event.target.value).getUTCDay();\n        if([0, 6].includes(day)){\n            event.preventDefault();\n            dateInput.value = '';\n            showAlert('Fines de semana no laborales', 'error');\n        } else {\n            appointment.date = dateInput.value;\n            console.log(appointment);\n        }\n        // const options = {\n        //     weekday: 'long',\n        //     year: 'numeric',\n        //     month: 'long'\n        // }\n        // console.log(day.toLocaleDateString('es-ES', options));\n    })\n}\n\nfunction disableDatePast() {\n    const dateInput = document.querySelector('#date');\n    const dateNow = new Date();\n    const year = dateNow.getFullYear();\n    let month = dateNow.getMonth()+1;\n    const day = dateNow.getDate();\n\n    // Desired format YYYY-MM-DD\n    if(month < 10) {\n        month = `0${month}`;\n    } \n\n    if(day < 10) {\n        day = `0${day}`;\n    }\n\n    const disableDate = `${year}-${month}-${day}`;\n\n    dateInput.min = disableDate; \n}\n\nfunction hourAppointment() {\n    const hourInput = document.querySelector('#hour');\n    hourInput.addEventListener('input', event => {\n        const hourAppointment = event.target.value;\n        const hour = hourAppointment.split(':');\n        if(hour[0] < 10 || hour[0] > 18){\n            showAlert('No se aceptan citas en ese horario','error');\n            setTimeout(()=>{\n                hourInput.value = '';\n            },3000);\n        } else {\n            appointment.hour = hourAppointment;\n        }\n    })\n}"]}